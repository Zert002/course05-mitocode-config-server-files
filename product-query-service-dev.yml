server:
  port: ${CUSTOM.SERVER.PORT:9091}

### Mongo database configuration
spring:
  data:
    mongodb:
      uri: ${MONGODB.URL.CONNECTION:mongodb://mitocode:mitocode@localhost:27018/mitocode?authSource=admin}

### Postgresql database configuration
  jpa:
    databasePlatform: 
    hibernate:
      ddl-auto: update
    show: true
    properties:
      hibernate:
        format_sql: true
      dialect: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    url: ${POSTGRESQL.URL.CONNECTION:jdbc:postgresql://localhost:5432/mitocode}
    username: mitocode
    password: mitocode
hibernate:
  dialect: org.hibernate.dialect.PostgreSQLDialect

info:
  app:
    name: Product Query Service Mitocode
    description: Módulo de la arquitectura de Microservicios que disponibiliza la información de los productos
    version: 0.0.1

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
    enabled: true
  swagger-ui:
    path: /openapi.yml
    enabled: false

# Kafka configuration
kafka:
  mitocode:
    topic: mitocode
    port: 9092
    server: 127.0.0.1

#Actuator configuration
management:
  endpoints:
    web:
      exposure:
        include: '*'
        base-path: /actuator
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN.SERVER.HOSTNAME:http://localhost:9411/api/v2/spans}

# Logging Configuration
logging:
  level:
    org:
      springframework:
        web: ERROR
    com:
      mitocode:
        microservices: ERROR
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'
